#BlueJ class context
comment0.target=SuperSmoothMover
comment0.text=\n\ <p>A\ variation\ of\ an\ actor\ that\ maintains\ a\ precise\ location\ (using\ doubles\ for\ the\ co-ordinates\n\ instead\ of\ ints).\ \ This\ allows\ small\ precise\ movements\ (e.g.\ movements\ of\ 1\ pixel\ or\ less)\n\ that\ do\ not\ lose\ precision.0\n\ \n\n\ <p>Modified\ by\ Jordan\ Cohen\ to\ include\ a\ precise\ rotation\ variable,\ as\ well\ as\ turn,\ setRotation\ \n\ and\ turnTowards\ methods.</p>\n\ \n\ <p>To\ use\ this\ class,\ simply\ have\ all\ of\ the\ Actors\ that\ need\ to\ move\ smoothly\ inherit\ from\ this\n\ class.\ This\ class\ adds\ new\ versions\ of\ move,\ turn\ and\ setLocation\ which\ take\ doubles.\ It\ also\ adds\ the\n\ following\ methods\ to\ access\ the\ precise\ values\:</p>\n\ <ul>\n\ <li><code>getPreciseX,\ getPreciseY\ -></code>\ Retrieves\ precise\ values</li>\n\ <li><code>getPreciseRotation\ -></code>\ gets\ the\ precise\ angle</li>\n\ <li><code>turnTowards\ (Actor)\ -></code>\ an\ added\ bonus\ -\ turn\ towards\ another\ Actor\ instead\ of\ an\ xy\ position</li>\n\ </ul>\n\ <p>Version\ 3.1\ update\ -\ Now\ includes\ the\ option\ to\ enable\ static\ rotation,\ meaning\ the\ Actor\ will\ remain\n\ \ \ \ facing\ the\ same\ direction\ visually\ even\ while\ turning\ and\ moving\ as\ desired.\ Call\ the\ method\ enableStaticRotation()\ \n\ \ \ \ to\ try\ this\ out</p>\n\ <p>Version\ 3.2\ update\ (11/23)\ -\ Now\ includes\ the\ ability\ to\ rotate\ images\ manually\ for\ SuperSmoothMover\ objects\n\ \ \ \ with\ staticRotation\ enabled.\ (Note\ that\ these\ new\ commands\ will\ do\ nothing\ if\ sR\ is\ disabled)</p>\n\ \n\ @author\ Poul\ Henriksen\n\ @author\ Michael\ Kolling\n\ @author\ Neil\ Brown\n\ \n\ @version\ 3.2.jc\ --\ Modified\ by\ Jordan\ Cohen\n\ \n
comment1.params=
comment1.target=SuperSmoothMover()
comment10.params=a
comment10.target=void\ turnTowards(greenfoot.Actor)
comment10.text=\n\ A\ short-cut\ method\ that\ I\ (Jordan\ Cohen)\ always\ thought\ Greenfoot\ should\ have\ -\ use\ the\n\ tuntToward\ method\ above\ to\ face\ another\ Actor\ instead\ of\ just\ a\ point.\ Keeps\ calling\ code\n\ cleaner.\ \n\ \n\ @param\ a\ \ \ \ \ The\ Actor\ to\ turn\ towards.\ \n
comment11.params=angle
comment11.target=void\ turn(int)
comment11.text=\n\ Turn\ a\ specified\ number\ of\ degrees.\n\ \n\ @param\ angle\ \ \ \ \ the\ number\ of\ degrees\ to\ turn.\n
comment12.params=angle
comment12.target=void\ turn(double)
comment12.text=\n\ Turn\ a\ specified\ number\ of\ degrees\ with\ precision.\n\ \n\ @param\ angle\ \ \ \ \ the\ precise\ number\ of\ degrees\ to\ turn\n
comment13.params=x\ y
comment13.target=void\ setLocation(double,\ double)
comment13.text=\n\ Set\ the\ location\ using\ exact\ coordinates.\n\ \n\ @param\ x\ the\ new\ x\ location\n\ @param\ y\ the\ new\ y\ location\n
comment14.params=x\ y
comment14.target=void\ setLocation(int,\ int)
comment14.text=\n\ Set\ the\ location\ using\ integer\ coordinates.\n\ (Overrides\ the\ method\ in\ Actor.)\ \ \ \ \n\ \n\ @param\ x\ the\ new\ x\ location\n\ @param\ y\ the\ new\ y\ location\n
comment15.params=
comment15.target=double\ getPreciseX()
comment15.text=\n\ Return\ the\ exact\ x-coordinate\ (as\ a\ double).\n\ \n\ @return\ double\ \ \ the\ exact\ x\ coordinate,\ as\ a\ double\n
comment16.params=
comment16.target=double\ getExactX()
comment16.text=\n\ \ \ original\ name\ from\ SmoothMover,\ for\ compatibility.\ Same\ as\ above.\n\ \ \ \n\ \ \ @return\ double\ the\ exact\ x\ coordinate,\ as\ a\ double\n
comment17.params=
comment17.target=double\ getPreciseY()
comment17.text=\n\ Return\ the\ exact\ y-coordinate\ (as\ a\ double).\n\ \n\ @return\ double\ \ \ the\ exact\ x\ coordinate,\ as\ a\ double\n
comment18.params=
comment18.target=double\ exactY()
comment18.text=\n\ \ \ original\ name\ from\ SmoothMover,\ for\ compatibility.\ Same\ as\ above.\n\ \ \ \n\ \ \ @return\ double\ the\ exact\ y\ coordinate,\ as\ a\ double\n
comment19.params=degrees
comment19.target=void\ turnImage(int)
comment19.text=\n\ Turn\ the\ IMAGE.\ This\ will\ not\ affect\ the\ movement\ rotation.\n\ \n\ @param\ degrees\ \ \ The\ delta\ to\ be\ applied\ to\ the\ image's\ angle\n
comment2.params=distance
comment2.target=void\ move(int)
comment2.text=\n\ Move\ forward\ by\ the\ specified\ distance.\n\ (Overrides\ the\ method\ in\ Actor).\n\ \n\ @param\ distance\ \ the\ distance\ to\ move\ in\ the\ current\ facing\ direction\n
comment20.params=
comment20.target=double\ getPreciseRotation()
comment20.text=\n\ Get\ the\ precise\ movement\ rotation\ of\ this\ Actor\n
comment21.params=
comment21.target=int\ getImageRotation()
comment21.text=\n\ Get\ the\ current\ state\ of\ the\ image's\ rotation.\ If\ static\ rotation\ is\n\ enabled,\ this\ will\ be\ different\ from\ the\ movement\ rotation,\ otherwise\n\ it\ is\ the\ same\ (and\ you\ probably\ shouldn't\ be\ calling\ this\ method\ if\n\ you\ are\ not\ using\ static\ rotation\ -\ use\ getRotation()\ or\ getPreciseRotation()\n\ instead.\n\ \n\ @return\ int\ the\ current\ rotation\ of\ the\ image\n
comment22.params=rotation
comment22.target=void\ setImageRotation(double)
comment22.text=\n\ Set\ the\ desired\ angle\ for\ the\ image.\ Note\ that\ if\ static\ rotation\ is\ not\\\n\ enabled,\ this\ method\ will\ do\ nothing.\n
comment23.params=rotation
comment23.target=void\ setImageRotation(int)
comment24.params=
comment24.target=int\ getRotation()
comment3.params=distance
comment3.target=void\ move(double)
comment3.text=\n\ Move\ forward\ by\ the\ specified\ exact\ distance.\n\ \n\ @param\ distance\ the\ precise\ distance\ to\ move\ in\ the\ current\ facing\ direction\n
comment4.params=
comment4.target=void\ enableStaticRotation()
comment4.text=\n\ Static\ rotation\ means\ that\ the\ IMAGE\ WILL\ NOT\ ROTATE.\ The\ turn,\ turnTowards\ and\ move\ commands\n\ will\ still\ work,\ and\ the\ Actor\ will\ move\ in\ the\ appropriate\ direction,\ but\ the\ image's\ facing\ angle\n\ will\ not\ change.\ Note\ that\ the\ disableStaticRotation()\ method\ can\ be\ used\ to\ turn\ this\ off.\n
comment5.params=
comment5.target=void\ disableStaticRotation()
comment5.text=\n\ This\ will\ turn\ off\ static\ rotation.\ Note\ that\ this\ will\ not\ do\ anything\ by\ default\ as\ static\ rotation\n\ is\ disabled.\ \n
comment6.params=degrees
comment6.target=void\ rotateImage(int)
comment6.text=\ \n\ Rotate\ image,\ not\ movement\ facing\ angle\n\ \n\ Needs\ to\ be\ improved\ /\ added\ to.\n
comment7.params=preciseRotation
comment7.target=void\ setRotation(double)
comment7.text=\n\ Set\ the\ internal\ rotation\ value\ to\ a\ new\ value.\n\ \n\ @param\ preciseRotation\ the\ precise\ new\ angle\n
comment8.params=preciseRotation
comment8.target=void\ setRotation(int)
comment8.text=\n\ Set\ the\ internal\ rotation\ value\ to\ a\ new\ value.\ This\ will\ override\ the\ method\ from\ Actor.\n\ \n\ @param\ preciseRotation\ the\ new\ angle\n
comment9.params=x\ y
comment9.target=void\ turnTowards(double,\ double)
comment9.text=\n\ Set\ the\ internal\ rotation\ to\ face\ towards\ a\ given\ point.\ This\ will\ override\ the\ method\ from\ Actor.\n\ \n\ @param\ x\ the\ x\ coordinate\ to\ face\n\ @param\ y\ the\ y\ coordinate\ to\ face\n
numComments=25
